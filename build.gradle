plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.10.0'
    id "com.github.hierynomus.license" version "0.16.1"
}

// ----------------------------------------------------------------

ext {
    year = 2022
    author = "photowey(photowey@gmail.com)"

    versions = [
            jackson     : "2.14.0", // 2.14.0
            fastjson2   : "2.0.19",
            junitjupiter: "5.9.0"
    ]
}

// ----------------------------------------------------------------

group 'com.photowey'
version '1.0.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:3.14.9'

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jackson}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${versions.jackson}"
//    implementation "com.fasterxml.jackson.module:jackson-modules-java8:${versions.jackson}"

    implementation "com.alibaba.fastjson2:fastjson2:${versions.fastjson2}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junitjupiter}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junitjupiter}"
}

// ----------------------------------------------------------------

// Include the generated files in the source set
sourceSets {
    main {
        java {
            srcDirs("src/main/gen")
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = '2021.3.2'
    plugins = ['com.intellij.java']
}

// ----------------------------------------------------------------

patchPluginXml {
    changeNotes.set("""
<em>New feature: provides the ability to write httpz commands and make HTTP requests in IDE</em>
""")
    version = "${project.version}"
    sinceBuild.set("213")
    untilBuild.set("222.*")
}

// ----------------------------------------------------------------

license {
    header rootProject.file('codequality/HEADER')
    excludes([
            "**/*.png", "**/*.svg", "**/*.xml", "**/*.yml", "**/*.yaml", "**/*.txt", "**/*.gradle", "**/*.md",
            "**/gradlew.bat", "**/gradlew", "**/package-info.java", "**/gen/**/*.java",
            "**/ibatis/**/*.java"
    ])
    strictCheck true
}

// ----------------------------------------------------------------

// compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding("UTF-8")

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// javadoc.options.encoding = "UTF-8"
tasks.withType(Javadoc) {
    options.encoding("UTF-8")
}

// ----------------------------------------------------------------

test {
    useJUnitPlatform()
}

// ----------------------------------------------------------------

task cleanDist(type: Delete) {
    group("build")

    delete("dist")
}

// ----------------------------------------------------------------

buildPlugin {
    buildSearchableOptions {
        enabled = false
    }
}

// ----------------------------------------------------------------